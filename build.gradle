plugins {
    // Languages
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"

    // Minecraft Tools
    id "net.minecraftforge.gradle.forge" version "8708bf3e0"

    // Build Tools
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

version = "3.0.0"

group "dev.isxander"

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    mappings = "stable_22"
    runDir = "run"
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://jitpack.io" }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
}

configurations {
    include
    implementation.extendsFrom include
}

dependencies {
    include "gg.essential:loader-launchwrapper:1.1.3"
    compileOnly "gg.essential:essential-1.8.9-forge:1788"
}

jar {
    manifest.attributes(
            'ModSide': 'CLIENT',
            'ForceLoadAsMod': true,
            'TweakClass': 'gg.essential.loader.stage0.EssentialSetupTweaker',
            'TweakOrder': '0'
    )
    enabled = false
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

processResources {
    inputs.property 'mod_version', project.version
    inputs.property 'mod_id', mod_id
    inputs.property 'mod_name', mod_name
    inputs.property 'mod_description', mod_description

    filesMatching("mcmod.info") {
        expand (
                "mod_version": project.version,
                "mod_id": mod_id,
                "mod_name": mod_name,
                "mod_description": mod_description
        )
    }
}

task moveResources {
    doLast {
        ant.move (
                file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/kotlin"
        )
    }
}

tasks.moveResources.dependsOn processResources
tasks.classes.dependsOn moveResources

shadowJar {
    archiveClassifier.set("")

    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

reobfJar.dependsOn tasks.shadowJar
