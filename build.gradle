plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "ddb1eb0"
    id "org.jetbrains.kotlin.jvm" version "1.5.31"
}

version = "2.2.0-beta2"
group = "xyz.qalcyo"
archivesBaseName = "BehindYouV2"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientRunArgs += "--tweakClass xyz.qalcyo.requisiteessentialloader.RequisiteEssentialTweaker"
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

repositories {
    mavenCentral()
    maven { url 'https://repo.sk1er.club/repository/maven-releases/' }
    maven { url 'https://jitpack.io/' }
    maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    maven {
        url = "http://maven.deftu.xyz/repository/maven-public/"
        allowInsecureProtocol = true
    }
}

dependencies {
    include ("gg.essential:loader-launchwrapper:1.1.1") {
        transitive = false
    }
    implementation('xyz.qalcyo.requisite:Requisite-1.8.9:2.0-beta6')
    include('xyz.qalcyo.requisite:RequisiteInstaller-1.8.9:1.3.10') {
        transitive = false
    }
    include ("com.github.Qalcyo:RequisiteEssentialLoader:39dee241bb") {
        transitive = false
    }
    implementation "gg.essential:essential-1.8.9-forge:1539+release-launch"
}

jar {
    manifest.attributes(
            'ModSide': 'CLIENT',
            'ForceLoadAsMod': true,
            'TweakClass': 'xyz.qalcyo.requisiteessentialloader.RequisiteEssentialTweaker',
            'TweakOrder': '0'
    )

    enabled = false
}

/**
 * This task simply replaces the `${version}` and `${mcversion}` properties in the mcmod.info with the data from Gradle
 */
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

// This forces the build task to run shadowJar after
tasks.reobfJar.dependsOn(tasks.shadowJar)

// This adds support to ("embed", "shade", "include") libraries into our JAR
shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE


    exclude 'LICENSE.md'
    exclude 'pack.mcmeta'
    exclude 'dummyThing'
    exclude '**/module-info.class'
    exclude '*.so'
    exclude '*.dylib'
    exclude '*.dll'
    exclude '*.jnilib'
    exclude 'ibxm/**'
    exclude 'com/jcraft/**'
    exclude 'org/lwjgl/**'
    exclude 'net/java/**'

    exclude 'META-INF/proguard/**'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/com.android.tools/**'

    exclude 'fabric.mod.json'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

sourceSets {
    main {
        output.resourcesDir = file("${buildDir}/classes/kotlin/main")
    }
}
